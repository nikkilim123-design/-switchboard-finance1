
import fs from 'fs'; import path from 'path'; import matter from 'gray-matter'; import { remark } from 'remark'; import html from 'remark-html';
const postsDirectory = path.join(process.cwd(), 'content', 'posts')
export function getSortedPostsData(){ if(!fs.existsSync(postsDirectory)) return []; const fileNames = fs.readdirSync(postsDirectory); const allPostsData = fileNames.filter(f=>f.endsWith('.md')).map(fileName=>{ const slug=fileName.replace(/\.md$/,''); const fullPath=path.join(postsDirectory,fileName); const fileContents=fs.readFileSync(fullPath,'utf8'); const {data}=matter(fileContents); return {slug,...data};}); return allPostsData.sort((a,b)=> (a.date<b.date?1:-1));}
export function getAllPostSlugs(){ if(!fs.existsSync(postsDirectory)) return []; const fileNames = fs.readdirSync(postsDirectory); return fileNames.filter(f=>f.endsWith('.md')).map(fileName=>({params:{slug:fileName.replace(/\.md$/,'')}}));}
export async function getPostData(slug){ const fullPath=path.join(postsDirectory,`${slug}.md`); const fileContents=fs.readFileSync(fullPath,'utf8'); const {data,content}=matter(fileContents); const processed=await remark().use(html).process(content); return {slug, contentHtml: processed.toString(), ...data};}
